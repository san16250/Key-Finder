

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Nov 14 18:06:46 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.00
    16                           ; Generated 27/05/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0006                     _PORTBbits	set	6
   206  0019                     _TXREG	set	25
   207  0018                     _RCSTA	set	24
   208  0007                     _PORTC	set	7
   209  0006                     _PORTB	set	6
   210  0005                     _PORTA	set	5
   211  0005                     _PORTAbits	set	5
   212  008F                     _OSCCON	set	143
   213  0099                     _SPBRG	set	153
   214  0098                     _TXSTA	set	152
   215  0087                     _TRISC	set	135
   216  0086                     _TRISB	set	134
   217  0085                     _TRISA	set	133
   218  0085                     _TRISAbits	set	133
   219  0187                     _BAUDCTL	set	391
   220  0189                     _ANSELH	set	393
   221  0188                     _ANSEL	set	392
   222                           
   223                           	psect	strings
   224  0003                     __pstrings:	
   225  0003                     stringtab:	
   226  0003                     __stringtab:	
   227  0003                     stringcode:	
   228                           ;	String table - string pointers are 1 byte each
   229                           
   230  0003                     stringdir:	
   231  0003  3000               	movlw	high stringdir
   232  0004  008A               	movwf	10
   233  0005  0804               	movf	4,w
   234  0006  0A84               	incf	4,f
   235  0007  0782               	addwf	2,f
   236  0008                     __stringbase:	
   237  0008  3400               	retlw	0
   238  0009                     __end_of__stringtab:	
   239  0009                     STR_1:	
   240  0009  3450               	retlw	80	;'P'
   241  000A  3472               	retlw	114	;'r'
   242  000B  3465               	retlw	101	;'e'
   243  000C  3473               	retlw	115	;'s'
   244  000D  3469               	retlw	105	;'i'
   245  000E  346F               	retlw	111	;'o'
   246  000F  346E               	retlw	110	;'n'
   247  0010  3461               	retlw	97	;'a'
   248  0011  3400               	retlw	0
   249  0012                     STR_3:	
   250  0012  3442               	retlw	66	;'B'
   251  0013  3475               	retlw	117	;'u'
   252  0014  3473               	retlw	115	;'s'
   253  0015  3463               	retlw	99	;'c'
   254  0016  3461               	retlw	97	;'a'
   255  0017  346E               	retlw	110	;'n'
   256  0018  3464               	retlw	100	;'d'
   257  0019  346F               	retlw	111	;'o'
   258  001A  3400               	retlw	0
   259  001B                     STR_4:	
   260  001B  344C               	retlw	76	;'L'
   261  001C  346C               	retlw	108	;'l'
   262  001D  3461               	retlw	97	;'a'
   263  001E  3476               	retlw	118	;'v'
   264  001F  3465               	retlw	101	;'e'
   265  0020  3473               	retlw	115	;'s'
   266  0021  3400               	retlw	0
   267  0022                     STR_2:	
   268  0022  3442               	retlw	66	;'B'
   269  0023  346F               	retlw	111	;'o'
   270  0024  3474               	retlw	116	;'t'
   271  0025  346F               	retlw	111	;'o'
   272  0026  346E               	retlw	110	;'n'
   273  0027  3400               	retlw	0
   274                           
   275                           ; #config settings
   276  0000                     
   277                           	psect	cinit
   278  07FC                     start_initialization:	
   279  07FC                     __initialization:	
   280  07FC                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283  07FC                     __end_of__initialization:	
   284  07FC  0183               	clrf	3
   285  07FD  120A  118A  2D74   	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	cstackCOMMON
   288  0070                     __pcstackCOMMON:	
   289  0070                     ?_Lcd_Cmd:	
   290  0070                     ??_Lcd_Cmd:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_Lcd_Chr_CP:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ??_Lcd_Chr_CP:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_Lcd_Init:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_init:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_main:	
   306                           ; 1 bytes @ 0x0
   307                           
   308                           
   309                           ; 1 bytes @ 0x0
   310  0070                     	ds	2
   311  0072                     Lcd_Chr_CP@data:	
   312  0072                     Lcd_Cmd@data:	
   313                           ; 1 bytes @ 0x2
   314                           
   315                           
   316                           ; 1 bytes @ 0x2
   317  0072                     	ds	1
   318  0073                     ??_Lcd_Init:	
   319  0073                     ?_Lcd_Out:	
   320                           ; 1 bytes @ 0x3
   321                           
   322  0073                     Lcd_Out@x:	
   323                           ; 1 bytes @ 0x3
   324                           
   325                           
   326                           ; 1 bytes @ 0x3
   327  0073                     	ds	1
   328  0074                     Lcd_Out@buffer:	
   329                           
   330                           ; 1 bytes @ 0x4
   331  0074                     	ds	1
   332  0075                     ??_Lcd_Out:	
   333  0075                     Lcd_Init@data:	
   334                           ; 1 bytes @ 0x5
   335                           
   336                           
   337                           ; 1 bytes @ 0x5
   338  0075                     	ds	1
   339  0076                     ??_init:	
   340  0076                     Lcd_Out@y:	
   341                           ; 1 bytes @ 0x6
   342                           
   343                           
   344                           ; 1 bytes @ 0x6
   345  0076                     	ds	1
   346  0077                     Lcd_Out@data:	
   347                           
   348                           ; 1 bytes @ 0x7
   349  0077                     	ds	2
   350  0079                     ??_main:	
   351                           
   352                           ; 1 bytes @ 0x9
   353  0079                     	ds	2
   354  007B                     main@x:	
   355                           
   356                           ; 1 bytes @ 0xB
   357  007B                     	ds	1
   358  007C                     main@y:	
   359                           
   360                           ; 1 bytes @ 0xC
   361  007C                     	ds	1
   362                           
   363                           	psect	maintext
   364  0574                     __pmaintext:	
   365 ;;
   366 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   367 ;;
   368 ;; *************** function _main *****************
   369 ;; Defined at:
   370 ;;		line 62 in file "keyfinder.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;  buffer1        20    0        unsigned char [20]
   375 ;;  i               2    0        int 
   376 ;;  y               1   12[COMMON] unsigned char 
   377 ;;  x               1   11[COMMON] unsigned char 
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : B00/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   387 ;;      Params:         0       0       0       0       0
   388 ;;      Locals:         2       0       0       0       0
   389 ;;      Temps:          2       0       0       0       0
   390 ;;      Totals:         4       0       0       0       0
   391 ;;Total ram usage:        4 bytes
   392 ;; Hardware stack levels required when called:    3
   393 ;; This function calls:
   394 ;;		_Lcd_Out
   395 ;;		_init
   396 ;; This function is called by:
   397 ;;		Startup code after reset
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           
   402                           ;psect for function _main
   403  0574                     _main:	
   404                           
   405                           ;keyfinder.c: 64: OSCCON = 0b01110000;
   406                           
   407                           ;incstack = 0
   408                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   409  0574  3070               	movlw	112
   410  0575  1683               	bsf	3,5	;RP0=1, select bank1
   411  0576  1303               	bcf	3,6	;RP1=0, select bank1
   412  0577  008F               	movwf	15	;volatile
   413                           
   414                           ;keyfinder.c: 65: init();
   415  0578  120A  118A  24FA  120A  118A  	fcall	_init
   416                           
   417                           ;keyfinder.c: 66: char x = 'A';
   418  057D  3041               	movlw	65
   419  057E  00F9               	movwf	??_main
   420  057F  0879               	movf	??_main,w
   421  0580  00FB               	movwf	main@x
   422                           
   423                           ;keyfinder.c: 67: char y = 'B';
   424  0581  3042               	movlw	66
   425  0582  00F9               	movwf	??_main
   426  0583  0879               	movf	??_main,w
   427  0584  00FC               	movwf	main@y
   428  0585                     l828:	
   429                           ;keyfinder.c: 68: int i;;keyfinder.c: 69: unsigned char buffer1[20];;keyfinder.c: 72: wh
      +                          ile (PORTBbits.RB1 == 0){
   430                           
   431  0585  1283               	bcf	3,5	;RP0=0, select bank0
   432  0586  1303               	bcf	3,6	;RP1=0, select bank0
   433  0587  1886               	btfsc	6,1	;volatile
   434  0588  2DD4               	goto	l836
   435                           
   436                           ;keyfinder.c: 73: Lcd_Out(1, 4, "Presiona");
   437  0589  3004               	movlw	4
   438  058A  00F9               	movwf	??_main
   439  058B  0879               	movf	??_main,w
   440  058C  00F3               	movwf	Lcd_Out@x
   441  058D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   442  058E  00FA               	movwf	??_main+1
   443  058F  087A               	movf	??_main+1,w
   444  0590  00F4               	movwf	Lcd_Out@buffer
   445  0591  3001               	movlw	1
   446  0592  120A  118A  2534  120A  118A  	fcall	_Lcd_Out
   447                           
   448                           ;keyfinder.c: 74: Lcd_Out(2, 4, "Boton");
   449  0597  3004               	movlw	4
   450  0598  00F9               	movwf	??_main
   451  0599  0879               	movf	??_main,w
   452  059A  00F3               	movwf	Lcd_Out@x
   453  059B  301A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   454  059C  00FA               	movwf	??_main+1
   455  059D  087A               	movf	??_main+1,w
   456  059E  00F4               	movwf	Lcd_Out@buffer
   457  059F  3002               	movlw	2
   458  05A0  120A  118A  2534  120A  118A  	fcall	_Lcd_Out
   459                           
   460                           ;keyfinder.c: 75: TXREG = y;
   461  05A5  087C               	movf	main@y,w
   462  05A6  1283               	bcf	3,5	;RP0=0, select bank0
   463  05A7  1303               	bcf	3,6	;RP1=0, select bank0
   464  05A8  0099               	movwf	25	;volatile
   465  05A9  2D85               	goto	l828
   466  05AA                     l89:	
   467                           ;keyfinder.c: 76: };keyfinder.c: 86: while(PORTBbits.RB1 == 1){
   468                           
   469                           
   470                           ;keyfinder.c: 87: PORTBbits.RB0 = 1;
   471  05AA  1406               	bsf	6,0	;volatile
   472                           
   473                           ;keyfinder.c: 88: Lcd_Out(1, 4, "Buscando");
   474  05AB  3004               	movlw	4
   475  05AC  00F9               	movwf	??_main
   476  05AD  0879               	movf	??_main,w
   477  05AE  00F3               	movwf	Lcd_Out@x
   478  05AF  300A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   479  05B0  00FA               	movwf	??_main+1
   480  05B1  087A               	movf	??_main+1,w
   481  05B2  00F4               	movwf	Lcd_Out@buffer
   482  05B3  3001               	movlw	1
   483  05B4  120A  118A  2534  120A  118A  	fcall	_Lcd_Out
   484                           
   485                           ;keyfinder.c: 89: Lcd_Out(2,4, "Llaves");
   486  05B9  3004               	movlw	4
   487  05BA  00F9               	movwf	??_main
   488  05BB  0879               	movf	??_main,w
   489  05BC  00F3               	movwf	Lcd_Out@x
   490  05BD  3013               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   491  05BE  00FA               	movwf	??_main+1
   492  05BF  087A               	movf	??_main+1,w
   493  05C0  00F4               	movwf	Lcd_Out@buffer
   494  05C1  3002               	movlw	2
   495  05C2  120A  118A  2534  120A  118A  	fcall	_Lcd_Out
   496                           
   497                           ;keyfinder.c: 90: TXREG = x;
   498  05C7  087B               	movf	main@x,w
   499  05C8  1283               	bcf	3,5	;RP0=0, select bank0
   500  05C9  1303               	bcf	3,6	;RP1=0, select bank0
   501  05CA  0099               	movwf	25	;volatile
   502                           
   503                           ;keyfinder.c: 91: _delay((unsigned long)((5)*(8000000/4000.0)));
   504  05CB  300D               	movlw	13
   505  05CC  00FA               	movwf	??_main+1
   506  05CD  30FB               	movlw	251
   507  05CE  00F9               	movwf	??_main
   508  05CF                     u227:	
   509  05CF  0BF9               	decfsz	??_main,f
   510  05D0  2DCF               	goto	u227
   511  05D1  0BFA               	decfsz	??_main+1,f
   512  05D2  2DCF               	goto	u227
   513  05D3  2DD4               	nop2
   514  05D4                     l836:	
   515  05D4  1283               	bcf	3,5	;RP0=0, select bank0
   516  05D5  1303               	bcf	3,6	;RP1=0, select bank0
   517  05D6  1C86               	btfss	6,1	;volatile
   518  05D7  2DDA               	goto	l91
   519  05D8  2DAA               	goto	l89
   520  05D9                     l92:	
   521                           ;keyfinder.c: 94: while (1);
   522                           
   523                           ;keyfinder.c: 92: };keyfinder.c: 93: return;
   524                           
   525  05D9  2DD9               	goto	l92
   526  05DA                     l91:	
   527  05DA  120A  118A  2800   	ljmp	start
   528  05DD                     __end_of_main:	
   529                           
   530                           	psect	text1
   531  04FA                     __ptext1:	
   532 ;; *************** function _init *****************
   533 ;; Defined at:
   534 ;;		line 37 in file "keyfinder.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          3       0       0       0       0
   551 ;;      Totals:         3       0       0       0       0
   552 ;;Total ram usage:        3 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    2
   555 ;; This function calls:
   556 ;;		_Lcd_Cmd
   557 ;;		_Lcd_Init
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           
   564                           ;psect for function _init
   565  04FA                     _init:	
   566                           
   567                           ;keyfinder.c: 40: PORTA = 0;
   568                           
   569                           ;incstack = 0
   570                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   571  04FA  1283               	bcf	3,5	;RP0=0, select bank0
   572  04FB  1303               	bcf	3,6	;RP1=0, select bank0
   573  04FC  0185               	clrf	5	;volatile
   574                           
   575                           ;keyfinder.c: 41: PORTB = 0;
   576  04FD  0186               	clrf	6	;volatile
   577                           
   578                           ;keyfinder.c: 42: PORTC = 0;
   579  04FE  0187               	clrf	7	;volatile
   580                           
   581                           ;keyfinder.c: 43: TRISA = 0b00000000;
   582  04FF  1683               	bsf	3,5	;RP0=1, select bank1
   583  0500  1303               	bcf	3,6	;RP1=0, select bank1
   584  0501  0185               	clrf	5	;volatile
   585                           
   586                           ;keyfinder.c: 44: TRISB = 0b00000010;
   587  0502  3002               	movlw	2
   588  0503  0086               	movwf	6	;volatile
   589                           
   590                           ;keyfinder.c: 45: TRISC = 0b10000000;
   591  0504  3080               	movlw	128
   592  0505  0087               	movwf	7	;volatile
   593                           
   594                           ;keyfinder.c: 46: ANSEL = 0;
   595  0506  1683               	bsf	3,5	;RP0=1, select bank3
   596  0507  1703               	bsf	3,6	;RP1=1, select bank3
   597  0508  0188               	clrf	8	;volatile
   598                           
   599                           ;keyfinder.c: 47: ANSELH = 0;
   600  0509  0189               	clrf	9	;volatile
   601                           
   602                           ;keyfinder.c: 50: BAUDCTL = 0b00000000;
   603  050A  0187               	clrf	7	;volatile
   604                           
   605                           ;keyfinder.c: 51: TXSTA = 0b00100100;
   606  050B  3024               	movlw	36
   607  050C  1683               	bsf	3,5	;RP0=1, select bank1
   608  050D  1303               	bcf	3,6	;RP1=0, select bank1
   609  050E  0098               	movwf	24	;volatile
   610                           
   611                           ;keyfinder.c: 52: SPBRG = 51;
   612  050F  3033               	movlw	51
   613  0510  0099               	movwf	25	;volatile
   614                           
   615                           ;keyfinder.c: 53: RCSTA = 0b10010000;
   616  0511  3090               	movlw	144
   617  0512  1283               	bcf	3,5	;RP0=0, select bank0
   618  0513  1303               	bcf	3,6	;RP1=0, select bank0
   619  0514  0098               	movwf	24	;volatile
   620                           
   621                           ;keyfinder.c: 54: Lcd_Init();
   622  0515  120A  118A  273D  120A  118A  	fcall	_Lcd_Init
   623                           
   624                           ;keyfinder.c: 55: Lcd_Cmd(1);
   625  051A  3001               	movlw	1
   626  051B  120A  118A  25DD  120A  118A  	fcall	_Lcd_Cmd
   627                           
   628                           ;keyfinder.c: 56: Lcd_Cmd(12);
   629  0520  300C               	movlw	12
   630  0521  120A  118A  25DD  120A  118A  	fcall	_Lcd_Cmd
   631                           
   632                           ;keyfinder.c: 57: _delay((unsigned long)((100)*(8000000/4000.0)));
   633  0526  3002               	movlw	2
   634  0527  00F8               	movwf	??_init+2
   635  0528  3004               	movlw	4
   636  0529  00F7               	movwf	??_init+1
   637  052A  30BA               	movlw	186
   638  052B  00F6               	movwf	??_init
   639  052C                     u237:	
   640  052C  0BF6               	decfsz	??_init,f
   641  052D  2D2C               	goto	u237
   642  052E  0BF7               	decfsz	??_init+1,f
   643  052F  2D2C               	goto	u237
   644  0530  0BF8               	decfsz	??_init+2,f
   645  0531  2D2C               	goto	u237
   646  0532  0000               	nop
   647  0533  0008               	return
   648  0534                     __end_of_init:	
   649                           
   650                           	psect	text2
   651  073D                     __ptext2:	
   652 ;; *************** function _Lcd_Init *****************
   653 ;; Defined at:
   654 ;;		line 52 in file "flex_lcd.h"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  data            1    5[COMMON] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0, pclath, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         1       0       0       0       0
   670 ;;      Temps:          2       0       0       0       0
   671 ;;      Totals:         3       0       0       0       0
   672 ;;Total ram usage:        3 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    1
   675 ;; This function calls:
   676 ;;		_Lcd_Cmd
   677 ;; This function is called by:
   678 ;;		_init
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function _Lcd_Init
   684  073D                     _Lcd_Init:	
   685                           
   686                           ;flex_lcd.h: 53: unsigned char data;;flex_lcd.h: 54: TRISAbits.TRISA5 = 0;
   687                           
   688                           ;incstack = 0
   689                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   690  073D  1683               	bsf	3,5	;RP0=1, select bank1
   691  073E  1303               	bcf	3,6	;RP1=0, select bank1
   692  073F  1285               	bcf	5,5	;volatile
   693                           
   694                           ;flex_lcd.h: 55: TRISAbits.TRISA4 = 0;
   695  0740  1205               	bcf	5,4	;volatile
   696                           
   697                           ;flex_lcd.h: 56: TRISAbits.TRISA3 = 0;
   698  0741  1185               	bcf	5,3	;volatile
   699                           
   700                           ;flex_lcd.h: 57: TRISAbits.TRISA2 = 0;
   701  0742  1105               	bcf	5,2	;volatile
   702                           
   703                           ;flex_lcd.h: 58: TRISAbits.TRISA1 = 0;
   704  0743  1085               	bcf	5,1	;volatile
   705                           
   706                           ;flex_lcd.h: 59: TRISAbits.TRISA0 = 0;
   707  0744  1005               	bcf	5,0	;volatile
   708                           
   709                           ;flex_lcd.h: 60: PORTAbits.RA5 = 0;
   710  0745  1283               	bcf	3,5	;RP0=0, select bank0
   711  0746  1303               	bcf	3,6	;RP1=0, select bank0
   712  0747  1285               	bcf	5,5	;volatile
   713                           
   714                           ;flex_lcd.h: 61: PORTAbits.RA4 = 0;
   715  0748  1205               	bcf	5,4	;volatile
   716                           
   717                           ;flex_lcd.h: 62: PORTAbits.RA3 = 0;
   718  0749  1185               	bcf	5,3	;volatile
   719                           
   720                           ;flex_lcd.h: 63: PORTAbits.RA2 = 0;
   721  074A  1105               	bcf	5,2	;volatile
   722                           
   723                           ;flex_lcd.h: 64: PORTAbits.RA1 = 0;
   724  074B  1085               	bcf	5,1	;volatile
   725                           
   726                           ;flex_lcd.h: 65: PORTAbits.RA0 = 0;
   727  074C  1005               	bcf	5,0	;volatile
   728                           
   729                           ;flex_lcd.h: 66: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   730  074D  300F               	movlw	15
   731  074E  00F4               	movwf	??_Lcd_Init+1
   732  074F  3047               	movlw	71
   733  0750  00F3               	movwf	??_Lcd_Init
   734  0751                     u247:	
   735  0751  0BF3               	decfsz	??_Lcd_Init,f
   736  0752  2F51               	goto	u247
   737  0753  0BF4               	decfsz	??_Lcd_Init+1,f
   738  0754  2F51               	goto	u247
   739  0755  2F56               	nop2
   740                           
   741                           ;flex_lcd.h: 67: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   742  0756  300F               	movlw	15
   743  0757  00F4               	movwf	??_Lcd_Init+1
   744  0758  3047               	movlw	71
   745  0759  00F3               	movwf	??_Lcd_Init
   746  075A                     u257:	
   747  075A  0BF3               	decfsz	??_Lcd_Init,f
   748  075B  2F5A               	goto	u257
   749  075C  0BF4               	decfsz	??_Lcd_Init+1,f
   750  075D  2F5A               	goto	u257
   751  075E  2F5F               	nop2
   752                           
   753                           ;flex_lcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   754  075F  300F               	movlw	15
   755  0760  00F4               	movwf	??_Lcd_Init+1
   756  0761  3047               	movlw	71
   757  0762  00F3               	movwf	??_Lcd_Init
   758  0763                     u267:	
   759  0763  0BF3               	decfsz	??_Lcd_Init,f
   760  0764  2F63               	goto	u267
   761  0765  0BF4               	decfsz	??_Lcd_Init+1,f
   762  0766  2F63               	goto	u267
   763  0767  2F68               	nop2
   764                           
   765                           ;flex_lcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   766  0768  300F               	movlw	15
   767  0769  00F4               	movwf	??_Lcd_Init+1
   768  076A  3047               	movlw	71
   769  076B  00F3               	movwf	??_Lcd_Init
   770  076C                     u277:	
   771  076C  0BF3               	decfsz	??_Lcd_Init,f
   772  076D  2F6C               	goto	u277
   773  076E  0BF4               	decfsz	??_Lcd_Init+1,f
   774  076F  2F6C               	goto	u277
   775  0770  2F71               	nop2
   776                           
   777                           ;flex_lcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   778  0771  300F               	movlw	15
   779  0772  00F4               	movwf	??_Lcd_Init+1
   780  0773  3047               	movlw	71
   781  0774  00F3               	movwf	??_Lcd_Init
   782  0775                     u287:	
   783  0775  0BF3               	decfsz	??_Lcd_Init,f
   784  0776  2F75               	goto	u287
   785  0777  0BF4               	decfsz	??_Lcd_Init+1,f
   786  0778  2F75               	goto	u287
   787  0779  2F7A               	nop2
   788                           
   789                           ;flex_lcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   790  077A  300F               	movlw	15
   791  077B  00F4               	movwf	??_Lcd_Init+1
   792  077C  3047               	movlw	71
   793  077D  00F3               	movwf	??_Lcd_Init
   794  077E                     u297:	
   795  077E  0BF3               	decfsz	??_Lcd_Init,f
   796  077F  2F7E               	goto	u297
   797  0780  0BF4               	decfsz	??_Lcd_Init+1,f
   798  0781  2F7E               	goto	u297
   799  0782  2F83               	nop2
   800                           
   801                           ;flex_lcd.h: 72: for(data = 1; data < 4; data ++)
   802  0783  01F5               	clrf	Lcd_Init@data
   803  0784  0AF5               	incf	Lcd_Init@data,f
   804  0785  3004               	movlw	4
   805  0786  0275               	subwf	Lcd_Init@data,w
   806  0787  1803               	btfsc	3,0
   807  0788  2FB4               	goto	l44
   808  0789                     l43:	
   809                           
   810                           ;flex_lcd.h: 73: {;flex_lcd.h: 74: PORTAbits.RA5 = 0; PORTAbits.RA4 = 0; PORTAbits.RA3 =
      +                           1; PORTAbits.RA2 = 1; PORTAbits.RA1 = 0;
   811  0789  1283               	bcf	3,5	;RP0=0, select bank0
   812  078A  1303               	bcf	3,6	;RP1=0, select bank0
   813  078B  1285               	bcf	5,5	;volatile
   814  078C  1205               	bcf	5,4	;volatile
   815  078D  1585               	bsf	5,3	;volatile
   816  078E  1505               	bsf	5,2	;volatile
   817  078F  1085               	bcf	5,1	;volatile
   818                           
   819                           ;flex_lcd.h: 75: PORTAbits.RA0 = 0; PORTAbits.RA5 = 0; PORTAbits.RA4 = 0; PORTAbits.RA3 
      +                          = 1; PORTAbits.RA2 = 1;
   820  0790  1005               	bcf	5,0	;volatile
   821  0791  1285               	bcf	5,5	;volatile
   822  0792  1205               	bcf	5,4	;volatile
   823  0793  1585               	bsf	5,3	;volatile
   824  0794  1505               	bsf	5,2	;volatile
   825                           
   826                           ;flex_lcd.h: 76: PORTAbits.RA1 = 1; PORTAbits.RA0 = 0;
   827  0795  1485               	bsf	5,1	;volatile
   828  0796  1005               	bcf	5,0	;volatile
   829                           
   830                           ;flex_lcd.h: 77: _delay((unsigned long)((5)*(8000000/4000000.0)));
   831  0797  3003               	movlw	3
   832  0798  00F3               	movwf	??_Lcd_Init
   833  0799                     u307:	
   834  0799  0BF3               	decfsz	??_Lcd_Init,f
   835  079A  2F99               	goto	u307
   836                           
   837                           ;flex_lcd.h: 78: PORTAbits.RA5 = 0; PORTAbits.RA4 = 0; PORTAbits.RA3 = 1; PORTAbits.RA2 
      +                          = 1; PORTAbits.RA1 = 0;
   838  079B  1283               	bcf	3,5	;RP0=0, select bank0
   839  079C  1303               	bcf	3,6	;RP1=0, select bank0
   840  079D  1285               	bcf	5,5	;volatile
   841  079E  1205               	bcf	5,4	;volatile
   842  079F  1585               	bsf	5,3	;volatile
   843  07A0  1505               	bsf	5,2	;volatile
   844  07A1  1085               	bcf	5,1	;volatile
   845                           
   846                           ;flex_lcd.h: 79: PORTAbits.RA0 = 0;
   847  07A2  1005               	bcf	5,0	;volatile
   848                           
   849                           ;flex_lcd.h: 80: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   850  07A3  300F               	movlw	15
   851  07A4  00F4               	movwf	??_Lcd_Init+1
   852  07A5  3047               	movlw	71
   853  07A6  00F3               	movwf	??_Lcd_Init
   854  07A7                     u317:	
   855  07A7  0BF3               	decfsz	??_Lcd_Init,f
   856  07A8  2FA7               	goto	u317
   857  07A9  0BF4               	decfsz	??_Lcd_Init+1,f
   858  07AA  2FA7               	goto	u317
   859  07AB  2FAC               	nop2
   860  07AC  3001               	movlw	1
   861  07AD  00F3               	movwf	??_Lcd_Init
   862  07AE  0873               	movf	??_Lcd_Init,w
   863  07AF  07F5               	addwf	Lcd_Init@data,f
   864  07B0  3004               	movlw	4
   865  07B1  0275               	subwf	Lcd_Init@data,w
   866  07B2  1C03               	skipc
   867  07B3  2F89               	goto	l43
   868  07B4                     l44:	
   869                           
   870                           ;flex_lcd.h: 81: };flex_lcd.h: 82: PORTAbits.RA5 = 0; PORTAbits.RA4 = 0; PORTAbits.RA3 =
      +                           1; PORTAbits.RA2 = 0; PORTAbits.RA1 = 0; PORTAbits.RA0 = 0;
   871  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   872  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   873  07B6  1285               	bcf	5,5	;volatile
   874  07B7  1205               	bcf	5,4	;volatile
   875  07B8  1585               	bsf	5,3	;volatile
   876  07B9  1105               	bcf	5,2	;volatile
   877  07BA  1085               	bcf	5,1	;volatile
   878  07BB  1005               	bcf	5,0	;volatile
   879                           
   880                           ;flex_lcd.h: 83: PORTAbits.RA5 = 0; PORTAbits.RA4 = 0; PORTAbits.RA3 = 1; PORTAbits.RA2 
      +                          = 0; PORTAbits.RA1 = 1; PORTAbits.RA0 = 0;
   881  07BC  1285               	bcf	5,5	;volatile
   882  07BD  1205               	bcf	5,4	;volatile
   883  07BE  1585               	bsf	5,3	;volatile
   884  07BF  1105               	bcf	5,2	;volatile
   885  07C0  1485               	bsf	5,1	;volatile
   886  07C1  1005               	bcf	5,0	;volatile
   887                           
   888                           ;flex_lcd.h: 84: _delay((unsigned long)((5)*(8000000/4000000.0)));
   889  07C2  3003               	movlw	3
   890  07C3  00F3               	movwf	??_Lcd_Init
   891  07C4                     u327:	
   892  07C4  0BF3               	decfsz	??_Lcd_Init,f
   893  07C5  2FC4               	goto	u327
   894                           
   895                           ;flex_lcd.h: 85: PORTAbits.RA5 = 0; PORTAbits.RA4 = 0; PORTAbits.RA3 = 1; PORTAbits.RA2 
      +                          = 0; PORTAbits.RA1 = 0; PORTAbits.RA0 = 0;
   896  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   897  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   898  07C8  1285               	bcf	5,5	;volatile
   899  07C9  1205               	bcf	5,4	;volatile
   900  07CA  1585               	bsf	5,3	;volatile
   901  07CB  1105               	bcf	5,2	;volatile
   902  07CC  1085               	bcf	5,1	;volatile
   903  07CD  1005               	bcf	5,0	;volatile
   904                           
   905                           ;flex_lcd.h: 86: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   906  07CE  300F               	movlw	15
   907  07CF  00F4               	movwf	??_Lcd_Init+1
   908  07D0  3047               	movlw	71
   909  07D1  00F3               	movwf	??_Lcd_Init
   910  07D2                     u337:	
   911  07D2  0BF3               	decfsz	??_Lcd_Init,f
   912  07D3  2FD2               	goto	u337
   913  07D4  0BF4               	decfsz	??_Lcd_Init+1,f
   914  07D5  2FD2               	goto	u337
   915  07D6  2FD7               	nop2
   916                           
   917                           ;flex_lcd.h: 87: data = 40; Lcd_Cmd(data);
   918  07D7  3028               	movlw	40
   919  07D8  00F3               	movwf	??_Lcd_Init
   920  07D9  0873               	movf	??_Lcd_Init,w
   921  07DA  00F5               	movwf	Lcd_Init@data
   922  07DB  0875               	movf	Lcd_Init@data,w
   923  07DC  120A  118A  25DD  120A  118A  	fcall	_Lcd_Cmd
   924                           
   925                           ;flex_lcd.h: 88: data = 16; Lcd_Cmd(data);
   926  07E1  3010               	movlw	16
   927  07E2  00F3               	movwf	??_Lcd_Init
   928  07E3  0873               	movf	??_Lcd_Init,w
   929  07E4  00F5               	movwf	Lcd_Init@data
   930  07E5  0875               	movf	Lcd_Init@data,w
   931  07E6  120A  118A  25DD  120A  118A  	fcall	_Lcd_Cmd
   932                           
   933                           ;flex_lcd.h: 89: data = 1; Lcd_Cmd(data);
   934  07EB  01F5               	clrf	Lcd_Init@data
   935  07EC  0AF5               	incf	Lcd_Init@data,f
   936  07ED  0875               	movf	Lcd_Init@data,w
   937  07EE  120A  118A  25DD  120A  118A  	fcall	_Lcd_Cmd
   938                           
   939                           ;flex_lcd.h: 90: data = 15; Lcd_Cmd(data);
   940  07F3  300F               	movlw	15
   941  07F4  00F3               	movwf	??_Lcd_Init
   942  07F5  0873               	movf	??_Lcd_Init,w
   943  07F6  00F5               	movwf	Lcd_Init@data
   944  07F7  0875               	movf	Lcd_Init@data,w
   945  07F8  120A  118A  25DD   	fcall	_Lcd_Cmd
   946  07FB  0008               	return
   947  07FC                     __end_of_Lcd_Init:	
   948                           
   949                           	psect	text3
   950  0534                     __ptext3:	
   951 ;; *************** function _Lcd_Out *****************
   952 ;; Defined at:
   953 ;;		line 94 in file "flex_lcd.h"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  y               1    wreg     unsigned char 
   956 ;;  x               1    3[COMMON] unsigned char 
   957 ;;  buffer          1    4[COMMON] PTR const unsigned char 
   958 ;;		 -> STR_4(7), STR_3(9), STR_2(6), STR_1(9), 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  y               1    6[COMMON] unsigned char 
   961 ;;  data            1    7[COMMON] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         2       0       0       0       0
   972 ;;      Locals:         2       0       0       0       0
   973 ;;      Temps:          1       0       0       0       0
   974 ;;      Totals:         5       0       0       0       0
   975 ;;Total ram usage:        5 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; Hardware stack levels required when called:    1
   978 ;; This function calls:
   979 ;;		_Lcd_Chr_CP
   980 ;;		_Lcd_Cmd
   981 ;; This function is called by:
   982 ;;		_main
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           
   987                           ;psect for function _Lcd_Out
   988  0534                     _Lcd_Out:	
   989                           
   990                           ;incstack = 0
   991                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   992                           ;Lcd_Out@y stored from wreg
   993  0534  00F6               	movwf	Lcd_Out@y
   994                           
   995                           ;flex_lcd.h: 96: unsigned char data;;flex_lcd.h: 97: switch (y)
   996  0535  2D45               	goto	l806
   997  0536                     l796:	
   998                           ;flex_lcd.h: 98: {;flex_lcd.h: 99: case 1: data = 128 + x; break;
   999                           
  1000  0536  0873               	movf	Lcd_Out@x,w
  1001  0537  3E80               	addlw	128
  1002  0538  2D41               	goto	L3
  1003  0539                     l798:	
  1004                           ;flex_lcd.h: 100: case 2: data = 192 + x; break;
  1005                           
  1006  0539  0873               	movf	Lcd_Out@x,w
  1007  053A  3EC0               	addlw	192
  1008  053B  2D41               	goto	L3
  1009  053C                     l800:	
  1010                           ;flex_lcd.h: 101: case 3: data = 148 + x; break;
  1011                           
  1012  053C  0873               	movf	Lcd_Out@x,w
  1013  053D  3E94               	addlw	148
  1014  053E  2D41               	goto	L3
  1015  053F                     l802:	
  1016                           ;flex_lcd.h: 102: case 4: data = 212 + x; break;
  1017                           
  1018  053F  0873               	movf	Lcd_Out@x,w
  1019  0540  3ED4               	addlw	212
  1020  0541                     L3:	
  1021  0541  00F5               	movwf	??_Lcd_Out
  1022  0542  0875               	movf	??_Lcd_Out,w
  1023  0543  00F7               	movwf	Lcd_Out@data
  1024                           
  1025                           ;flex_lcd.h: 104: }
  1026                           
  1027                           ;flex_lcd.h: 103: default: break;
  1028  0544  2D53               	goto	l808
  1029  0545                     l806:	
  1030  0545  0876               	movf	Lcd_Out@y,w
  1031                           
  1032                           ; Switch size 1, requested type "space"
  1033                           ; Number of cases is 4, Range of values is 1 to 4
  1034                           ; switch strategies available:
  1035                           ; Name         Instructions Cycles
  1036                           ; simple_byte           13     7 (average)
  1037                           ; direct_byte           23    11 (fixed)
  1038                           ; jumptable            263     9 (fixed)
  1039                           ;	Chosen strategy is simple_byte
  1040  0546  3A01               	xorlw	1	; case 1
  1041  0547  1903               	skipnz
  1042  0548  2D36               	goto	l796
  1043  0549  3A03               	xorlw	3	; case 2
  1044  054A  1903               	skipnz
  1045  054B  2D39               	goto	l798
  1046  054C  3A01               	xorlw	1	; case 3
  1047  054D  1903               	skipnz
  1048  054E  2D3C               	goto	l800
  1049  054F  3A07               	xorlw	7	; case 4
  1050  0550  1903               	skipnz
  1051  0551  2D3F               	goto	l802
  1052  0552  2D53               	goto	l808
  1053  0553                     l808:	
  1054                           
  1055                           ;flex_lcd.h: 105: Lcd_Cmd(data);
  1056  0553  0877               	movf	Lcd_Out@data,w
  1057  0554  120A  118A  25DD  120A  118A  	fcall	_Lcd_Cmd
  1058  0559                     l814:	
  1059                           ;flex_lcd.h: 106: while(*buffer)
  1060                           
  1061  0559  0874               	movf	Lcd_Out@buffer,w
  1062  055A  0084               	movwf	4
  1063  055B  120A  118A  2003  120A  118A  	fcall	stringdir
  1064  0560  3A00               	xorlw	0
  1065  0561  1903               	btfsc	3,2
  1066  0562  0008               	return
  1067                           
  1068                           ;flex_lcd.h: 107: {;flex_lcd.h: 108: Lcd_Chr_CP(*buffer);
  1069  0563  0874               	movf	Lcd_Out@buffer,w
  1070  0564  0084               	movwf	4
  1071  0565  120A  118A  2003  120A  118A  	fcall	stringdir
  1072  056A  120A  118A  268B  120A  118A  	fcall	_Lcd_Chr_CP
  1073                           
  1074                           ;flex_lcd.h: 109: buffer++;
  1075  056F  3001               	movlw	1
  1076  0570  00F5               	movwf	??_Lcd_Out
  1077  0571  0875               	movf	??_Lcd_Out,w
  1078  0572  07F4               	addwf	Lcd_Out@buffer,f
  1079  0573  2D59               	goto	l814
  1080  0574                     __end_of_Lcd_Out:	
  1081                           ;flex_lcd.h: 110: };flex_lcd.h: 111: return;
  1082                           
  1083                           
  1084                           	psect	text4
  1085  05DD                     __ptext4:	
  1086 ;; *************** function _Lcd_Cmd *****************
  1087 ;; Defined at:
  1088 ;;		line 150 in file "flex_lcd.h"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  data            1    wreg     unsigned char 
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  data            1    2[COMMON] unsigned char 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1102 ;;      Params:         0       0       0       0       0
  1103 ;;      Locals:         1       0       0       0       0
  1104 ;;      Temps:          2       0       0       0       0
  1105 ;;      Totals:         3       0       0       0       0
  1106 ;;Total ram usage:        3 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_Lcd_Init
  1112 ;;		_Lcd_Out
  1113 ;;		_init
  1114 ;;		_Lcd_Out2
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           
  1119                           ;psect for function _Lcd_Cmd
  1120  05DD                     _Lcd_Cmd:	
  1121                           
  1122                           ;incstack = 0
  1123                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  1124                           ;Lcd_Cmd@data stored from wreg
  1125  05DD  00F2               	movwf	Lcd_Cmd@data
  1126                           
  1127                           ;flex_lcd.h: 151: PORTAbits.RA1 = 0; PORTAbits.RA0 = 0;
  1128  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1129  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1130  05E0  1085               	bcf	5,1	;volatile
  1131  05E1  1005               	bcf	5,0	;volatile
  1132                           
  1133                           ;flex_lcd.h: 152: PORTAbits.RA5 = (data & 0b10000000)>>7; PORTAbits.RA4 = (data & 0b0100
      +                          0000)>>6;
  1134  05E2  0872               	movf	Lcd_Cmd@data,w
  1135  05E3  00F0               	movwf	??_Lcd_Cmd
  1136  05E4  3007               	movlw	7
  1137  05E5                     u15:	
  1138  05E5  1003               	clrc
  1139  05E6  0CF0               	rrf	??_Lcd_Cmd,f
  1140  05E7  3EFF               	addlw	-1
  1141  05E8  1D03               	skipz
  1142  05E9  2DE5               	goto	u15
  1143  05EA  0870               	movf	??_Lcd_Cmd,w
  1144  05EB  3901               	andlw	1
  1145  05EC  00F1               	movwf	??_Lcd_Cmd+1
  1146  05ED  0EF1               	swapf	??_Lcd_Cmd+1,f
  1147  05EE  0DF1               	rlf	??_Lcd_Cmd+1,f
  1148  05EF  0805               	movf	5,w	;volatile
  1149  05F0  0671               	xorwf	??_Lcd_Cmd+1,w
  1150  05F1  39DF               	andlw	-33
  1151  05F2  0671               	xorwf	??_Lcd_Cmd+1,w
  1152  05F3  0085               	movwf	5	;volatile
  1153  05F4  0872               	movf	Lcd_Cmd@data,w
  1154  05F5  00F0               	movwf	??_Lcd_Cmd
  1155  05F6  3006               	movlw	6
  1156  05F7                     u25:	
  1157  05F7  1003               	clrc
  1158  05F8  0CF0               	rrf	??_Lcd_Cmd,f
  1159  05F9  3EFF               	addlw	-1
  1160  05FA  1D03               	skipz
  1161  05FB  2DF7               	goto	u25
  1162  05FC  0870               	movf	??_Lcd_Cmd,w
  1163  05FD  3901               	andlw	1
  1164  05FE  00F1               	movwf	??_Lcd_Cmd+1
  1165  05FF  0EF1               	swapf	??_Lcd_Cmd+1,f
  1166  0600  0805               	movf	5,w	;volatile
  1167  0601  0671               	xorwf	??_Lcd_Cmd+1,w
  1168  0602  39EF               	andlw	-17
  1169  0603  0671               	xorwf	??_Lcd_Cmd+1,w
  1170  0604  0085               	movwf	5	;volatile
  1171                           
  1172                           ;flex_lcd.h: 153: PORTAbits.RA3 = (data & 0b00100000)>>5; PORTAbits.RA2 = (data & 0b0001
      +                          0000)>>4;
  1173  0605  0872               	movf	Lcd_Cmd@data,w
  1174  0606  00F0               	movwf	??_Lcd_Cmd
  1175  0607  3005               	movlw	5
  1176  0608                     u35:	
  1177  0608  1003               	clrc
  1178  0609  0CF0               	rrf	??_Lcd_Cmd,f
  1179  060A  3EFF               	addlw	-1
  1180  060B  1D03               	skipz
  1181  060C  2E08               	goto	u35
  1182  060D  0870               	movf	??_Lcd_Cmd,w
  1183  060E  3901               	andlw	1
  1184  060F  00F1               	movwf	??_Lcd_Cmd+1
  1185  0610  0DF1               	rlf	??_Lcd_Cmd+1,f
  1186  0611  0DF1               	rlf	??_Lcd_Cmd+1,f
  1187  0612  0DF1               	rlf	??_Lcd_Cmd+1,f
  1188  0613  0805               	movf	5,w	;volatile
  1189  0614  0671               	xorwf	??_Lcd_Cmd+1,w
  1190  0615  39F7               	andlw	-9
  1191  0616  0671               	xorwf	??_Lcd_Cmd+1,w
  1192  0617  0085               	movwf	5	;volatile
  1193  0618  0872               	movf	Lcd_Cmd@data,w
  1194  0619  00F0               	movwf	??_Lcd_Cmd
  1195  061A  3004               	movlw	4
  1196  061B                     u45:	
  1197  061B  1003               	clrc
  1198  061C  0CF0               	rrf	??_Lcd_Cmd,f
  1199  061D  3EFF               	addlw	-1
  1200  061E  1D03               	skipz
  1201  061F  2E1B               	goto	u45
  1202  0620  0870               	movf	??_Lcd_Cmd,w
  1203  0621  3901               	andlw	1
  1204  0622  00F1               	movwf	??_Lcd_Cmd+1
  1205  0623  0DF1               	rlf	??_Lcd_Cmd+1,f
  1206  0624  0DF1               	rlf	??_Lcd_Cmd+1,f
  1207  0625  0805               	movf	5,w	;volatile
  1208  0626  0671               	xorwf	??_Lcd_Cmd+1,w
  1209  0627  39FB               	andlw	-5
  1210  0628  0671               	xorwf	??_Lcd_Cmd+1,w
  1211  0629  0085               	movwf	5	;volatile
  1212                           
  1213                           ;flex_lcd.h: 154: _delay(10);
  1214  062A  3003               	movlw	3
  1215  062B  00F0               	movwf	??_Lcd_Cmd
  1216  062C                     u347:	
  1217  062C  0BF0               	decfsz	??_Lcd_Cmd,f
  1218  062D  2E2C               	goto	u347
  1219                           
  1220                           ;flex_lcd.h: 155: PORTAbits.RA1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); P
      +                          ORTAbits.RA1 = 0;
  1221  062E  1283               	bcf	3,5	;RP0=0, select bank0
  1222  062F  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0630  1485               	bsf	5,1	;volatile
  1224  0631  3003               	movlw	3
  1225  0632  00F0               	movwf	??_Lcd_Cmd
  1226  0633                     u357:	
  1227  0633  0BF0               	decfsz	??_Lcd_Cmd,f
  1228  0634  2E33               	goto	u357
  1229  0635  1283               	bcf	3,5	;RP0=0, select bank0
  1230  0636  1303               	bcf	3,6	;RP1=0, select bank0
  1231  0637  1085               	bcf	5,1	;volatile
  1232                           
  1233                           ;flex_lcd.h: 156: PORTAbits.RA5 = (data & 0b00001000)>>3; PORTAbits.RA4 = (data & 0b0000
      +                          0100)>>2;
  1234  0638  0872               	movf	Lcd_Cmd@data,w
  1235  0639  00F0               	movwf	??_Lcd_Cmd
  1236  063A  3003               	movlw	3
  1237  063B                     u55:	
  1238  063B  1003               	clrc
  1239  063C  0CF0               	rrf	??_Lcd_Cmd,f
  1240  063D  3EFF               	addlw	-1
  1241  063E  1D03               	skipz
  1242  063F  2E3B               	goto	u55
  1243  0640  0870               	movf	??_Lcd_Cmd,w
  1244  0641  3901               	andlw	1
  1245  0642  00F1               	movwf	??_Lcd_Cmd+1
  1246  0643  0EF1               	swapf	??_Lcd_Cmd+1,f
  1247  0644  0DF1               	rlf	??_Lcd_Cmd+1,f
  1248  0645  0805               	movf	5,w	;volatile
  1249  0646  0671               	xorwf	??_Lcd_Cmd+1,w
  1250  0647  39DF               	andlw	-33
  1251  0648  0671               	xorwf	??_Lcd_Cmd+1,w
  1252  0649  0085               	movwf	5	;volatile
  1253  064A  0872               	movf	Lcd_Cmd@data,w
  1254  064B  00F0               	movwf	??_Lcd_Cmd
  1255  064C  3002               	movlw	2
  1256  064D                     u65:	
  1257  064D  1003               	clrc
  1258  064E  0CF0               	rrf	??_Lcd_Cmd,f
  1259  064F  3EFF               	addlw	-1
  1260  0650  1D03               	skipz
  1261  0651  2E4D               	goto	u65
  1262  0652  0870               	movf	??_Lcd_Cmd,w
  1263  0653  3901               	andlw	1
  1264  0654  00F1               	movwf	??_Lcd_Cmd+1
  1265  0655  0EF1               	swapf	??_Lcd_Cmd+1,f
  1266  0656  0805               	movf	5,w	;volatile
  1267  0657  0671               	xorwf	??_Lcd_Cmd+1,w
  1268  0658  39EF               	andlw	-17
  1269  0659  0671               	xorwf	??_Lcd_Cmd+1,w
  1270  065A  0085               	movwf	5	;volatile
  1271                           
  1272                           ;flex_lcd.h: 157: PORTAbits.RA3 = (data & 0b00000010)>>1; PORTAbits.RA2 = (data & 0b0000
      +                          0001);
  1273  065B  0872               	movf	Lcd_Cmd@data,w
  1274  065C  00F0               	movwf	??_Lcd_Cmd
  1275  065D  1003               	clrc
  1276  065E  0C70               	rrf	??_Lcd_Cmd,w
  1277  065F  3901               	andlw	1
  1278  0660  00F1               	movwf	??_Lcd_Cmd+1
  1279  0661  0DF1               	rlf	??_Lcd_Cmd+1,f
  1280  0662  0DF1               	rlf	??_Lcd_Cmd+1,f
  1281  0663  0DF1               	rlf	??_Lcd_Cmd+1,f
  1282  0664  0805               	movf	5,w	;volatile
  1283  0665  0671               	xorwf	??_Lcd_Cmd+1,w
  1284  0666  39F7               	andlw	-9
  1285  0667  0671               	xorwf	??_Lcd_Cmd+1,w
  1286  0668  0085               	movwf	5	;volatile
  1287  0669  0872               	movf	Lcd_Cmd@data,w
  1288  066A  3901               	andlw	1
  1289  066B  00F0               	movwf	??_Lcd_Cmd
  1290  066C  0DF0               	rlf	??_Lcd_Cmd,f
  1291  066D  0DF0               	rlf	??_Lcd_Cmd,f
  1292  066E  0805               	movf	5,w	;volatile
  1293  066F  0670               	xorwf	??_Lcd_Cmd,w
  1294  0670  39FB               	andlw	-5
  1295  0671  0670               	xorwf	??_Lcd_Cmd,w
  1296  0672  0085               	movwf	5	;volatile
  1297                           
  1298                           ;flex_lcd.h: 158: _delay(10);
  1299  0673  3003               	movlw	3
  1300  0674  00F0               	movwf	??_Lcd_Cmd
  1301  0675                     u367:	
  1302  0675  0BF0               	decfsz	??_Lcd_Cmd,f
  1303  0676  2E75               	goto	u367
  1304                           
  1305                           ;flex_lcd.h: 159: PORTAbits.RA1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); P
      +                          ORTAbits.RA1 = 0;
  1306  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0678  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0679  1485               	bsf	5,1	;volatile
  1309  067A  3003               	movlw	3
  1310  067B  00F0               	movwf	??_Lcd_Cmd
  1311  067C                     u377:	
  1312  067C  0BF0               	decfsz	??_Lcd_Cmd,f
  1313  067D  2E7C               	goto	u377
  1314  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1315  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0680  1085               	bcf	5,1	;volatile
  1317                           
  1318                           ;flex_lcd.h: 160: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1319  0681  300F               	movlw	15
  1320  0682  00F1               	movwf	??_Lcd_Cmd+1
  1321  0683  3047               	movlw	71
  1322  0684  00F0               	movwf	??_Lcd_Cmd
  1323  0685                     u387:	
  1324  0685  0BF0               	decfsz	??_Lcd_Cmd,f
  1325  0686  2E85               	goto	u387
  1326  0687  0BF1               	decfsz	??_Lcd_Cmd+1,f
  1327  0688  2E85               	goto	u387
  1328  0689  2E8A               	nop2
  1329  068A  0008               	return
  1330  068B                     __end_of_Lcd_Cmd:	
  1331                           
  1332                           	psect	text5
  1333  068B                     __ptext5:	
  1334 ;; *************** function _Lcd_Chr_CP *****************
  1335 ;; Defined at:
  1336 ;;		line 136 in file "flex_lcd.h"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  data            1    wreg     unsigned char 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  data            1    2[COMMON] unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1350 ;;      Params:         0       0       0       0       0
  1351 ;;      Locals:         1       0       0       0       0
  1352 ;;      Temps:          2       0       0       0       0
  1353 ;;      Totals:         3       0       0       0       0
  1354 ;;Total ram usage:        3 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_Lcd_Out
  1360 ;;		_Lcd_Out2
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _Lcd_Chr_CP
  1366  068B                     _Lcd_Chr_CP:	
  1367                           
  1368                           ;incstack = 0
  1369                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  1370                           ;Lcd_Chr_CP@data stored from wreg
  1371  068B  00F2               	movwf	Lcd_Chr_CP@data
  1372                           
  1373                           ;flex_lcd.h: 137: PORTAbits.RA1 = 0; PORTAbits.RA0 = 1;
  1374  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1375  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1376  068E  1085               	bcf	5,1	;volatile
  1377  068F  1405               	bsf	5,0	;volatile
  1378                           
  1379                           ;flex_lcd.h: 138: PORTAbits.RA5 = (data & 0b10000000)>>7; PORTAbits.RA4 = (data & 0b0100
      +                          0000)>>6;
  1380  0690  0872               	movf	Lcd_Chr_CP@data,w
  1381  0691  00F0               	movwf	??_Lcd_Chr_CP
  1382  0692  3007               	movlw	7
  1383  0693                     u95:	
  1384  0693  1003               	clrc
  1385  0694  0CF0               	rrf	??_Lcd_Chr_CP,f
  1386  0695  3EFF               	addlw	-1
  1387  0696  1D03               	skipz
  1388  0697  2E93               	goto	u95
  1389  0698  0870               	movf	??_Lcd_Chr_CP,w
  1390  0699  3901               	andlw	1
  1391  069A  00F1               	movwf	??_Lcd_Chr_CP+1
  1392  069B  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  1393  069C  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  1394  069D  0805               	movf	5,w	;volatile
  1395  069E  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1396  069F  39DF               	andlw	-33
  1397  06A0  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1398  06A1  0085               	movwf	5	;volatile
  1399  06A2  0872               	movf	Lcd_Chr_CP@data,w
  1400  06A3  00F0               	movwf	??_Lcd_Chr_CP
  1401  06A4  3006               	movlw	6
  1402  06A5                     u105:	
  1403  06A5  1003               	clrc
  1404  06A6  0CF0               	rrf	??_Lcd_Chr_CP,f
  1405  06A7  3EFF               	addlw	-1
  1406  06A8  1D03               	skipz
  1407  06A9  2EA5               	goto	u105
  1408  06AA  0870               	movf	??_Lcd_Chr_CP,w
  1409  06AB  3901               	andlw	1
  1410  06AC  00F1               	movwf	??_Lcd_Chr_CP+1
  1411  06AD  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  1412  06AE  0805               	movf	5,w	;volatile
  1413  06AF  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1414  06B0  39EF               	andlw	-17
  1415  06B1  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1416  06B2  0085               	movwf	5	;volatile
  1417                           
  1418                           ;flex_lcd.h: 139: PORTAbits.RA3 = (data & 0b00100000)>>5; PORTAbits.RA2 = (data & 0b0001
      +                          0000)>>4;
  1419  06B3  0872               	movf	Lcd_Chr_CP@data,w
  1420  06B4  00F0               	movwf	??_Lcd_Chr_CP
  1421  06B5  3005               	movlw	5
  1422  06B6                     u115:	
  1423  06B6  1003               	clrc
  1424  06B7  0CF0               	rrf	??_Lcd_Chr_CP,f
  1425  06B8  3EFF               	addlw	-1
  1426  06B9  1D03               	skipz
  1427  06BA  2EB6               	goto	u115
  1428  06BB  0870               	movf	??_Lcd_Chr_CP,w
  1429  06BC  3901               	andlw	1
  1430  06BD  00F1               	movwf	??_Lcd_Chr_CP+1
  1431  06BE  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  1432  06BF  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  1433  06C0  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  1434  06C1  0805               	movf	5,w	;volatile
  1435  06C2  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1436  06C3  39F7               	andlw	-9
  1437  06C4  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1438  06C5  0085               	movwf	5	;volatile
  1439  06C6  0872               	movf	Lcd_Chr_CP@data,w
  1440  06C7  00F0               	movwf	??_Lcd_Chr_CP
  1441  06C8  3004               	movlw	4
  1442  06C9                     u125:	
  1443  06C9  1003               	clrc
  1444  06CA  0CF0               	rrf	??_Lcd_Chr_CP,f
  1445  06CB  3EFF               	addlw	-1
  1446  06CC  1D03               	skipz
  1447  06CD  2EC9               	goto	u125
  1448  06CE  0870               	movf	??_Lcd_Chr_CP,w
  1449  06CF  3901               	andlw	1
  1450  06D0  00F1               	movwf	??_Lcd_Chr_CP+1
  1451  06D1  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  1452  06D2  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  1453  06D3  0805               	movf	5,w	;volatile
  1454  06D4  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1455  06D5  39FB               	andlw	-5
  1456  06D6  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1457  06D7  0085               	movwf	5	;volatile
  1458                           
  1459                           ;flex_lcd.h: 140: _delay(10);
  1460  06D8  3003               	movlw	3
  1461  06D9  00F0               	movwf	??_Lcd_Chr_CP
  1462  06DA                     u397:	
  1463  06DA  0BF0               	decfsz	??_Lcd_Chr_CP,f
  1464  06DB  2EDA               	goto	u397
  1465                           
  1466                           ;flex_lcd.h: 141: PORTAbits.RA1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); P
      +                          ORTAbits.RA1 = 0;
  1467  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  1468  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  1469  06DE  1485               	bsf	5,1	;volatile
  1470  06DF  3003               	movlw	3
  1471  06E0  00F0               	movwf	??_Lcd_Chr_CP
  1472  06E1                     u407:	
  1473  06E1  0BF0               	decfsz	??_Lcd_Chr_CP,f
  1474  06E2  2EE1               	goto	u407
  1475  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1476  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1477  06E5  1085               	bcf	5,1	;volatile
  1478                           
  1479                           ;flex_lcd.h: 142: PORTAbits.RA5 = (data & 0b00001000)>>3; PORTAbits.RA4 = (data & 0b0000
      +                          0100)>>2;
  1480  06E6  0872               	movf	Lcd_Chr_CP@data,w
  1481  06E7  00F0               	movwf	??_Lcd_Chr_CP
  1482  06E8  3003               	movlw	3
  1483  06E9                     u135:	
  1484  06E9  1003               	clrc
  1485  06EA  0CF0               	rrf	??_Lcd_Chr_CP,f
  1486  06EB  3EFF               	addlw	-1
  1487  06EC  1D03               	skipz
  1488  06ED  2EE9               	goto	u135
  1489  06EE  0870               	movf	??_Lcd_Chr_CP,w
  1490  06EF  3901               	andlw	1
  1491  06F0  00F1               	movwf	??_Lcd_Chr_CP+1
  1492  06F1  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  1493  06F2  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  1494  06F3  0805               	movf	5,w	;volatile
  1495  06F4  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1496  06F5  39DF               	andlw	-33
  1497  06F6  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1498  06F7  0085               	movwf	5	;volatile
  1499  06F8  0872               	movf	Lcd_Chr_CP@data,w
  1500  06F9  00F0               	movwf	??_Lcd_Chr_CP
  1501  06FA  3002               	movlw	2
  1502  06FB                     u145:	
  1503  06FB  1003               	clrc
  1504  06FC  0CF0               	rrf	??_Lcd_Chr_CP,f
  1505  06FD  3EFF               	addlw	-1
  1506  06FE  1D03               	skipz
  1507  06FF  2EFB               	goto	u145
  1508  0700  0870               	movf	??_Lcd_Chr_CP,w
  1509  0701  3901               	andlw	1
  1510  0702  00F1               	movwf	??_Lcd_Chr_CP+1
  1511  0703  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  1512  0704  0805               	movf	5,w	;volatile
  1513  0705  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1514  0706  39EF               	andlw	-17
  1515  0707  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1516  0708  0085               	movwf	5	;volatile
  1517                           
  1518                           ;flex_lcd.h: 143: PORTAbits.RA3 = (data & 0b00000010)>>1; PORTAbits.RA2 = (data & 0b0000
      +                          0001);
  1519  0709  0872               	movf	Lcd_Chr_CP@data,w
  1520  070A  00F0               	movwf	??_Lcd_Chr_CP
  1521  070B  1003               	clrc
  1522  070C  0C70               	rrf	??_Lcd_Chr_CP,w
  1523  070D  3901               	andlw	1
  1524  070E  00F1               	movwf	??_Lcd_Chr_CP+1
  1525  070F  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  1526  0710  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  1527  0711  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  1528  0712  0805               	movf	5,w	;volatile
  1529  0713  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1530  0714  39F7               	andlw	-9
  1531  0715  0671               	xorwf	??_Lcd_Chr_CP+1,w
  1532  0716  0085               	movwf	5	;volatile
  1533  0717  0872               	movf	Lcd_Chr_CP@data,w
  1534  0718  3901               	andlw	1
  1535  0719  00F0               	movwf	??_Lcd_Chr_CP
  1536  071A  0DF0               	rlf	??_Lcd_Chr_CP,f
  1537  071B  0DF0               	rlf	??_Lcd_Chr_CP,f
  1538  071C  0805               	movf	5,w	;volatile
  1539  071D  0670               	xorwf	??_Lcd_Chr_CP,w
  1540  071E  39FB               	andlw	-5
  1541  071F  0670               	xorwf	??_Lcd_Chr_CP,w
  1542  0720  0085               	movwf	5	;volatile
  1543                           
  1544                           ;flex_lcd.h: 144: _delay(10);
  1545  0721  3003               	movlw	3
  1546  0722  00F0               	movwf	??_Lcd_Chr_CP
  1547  0723                     u417:	
  1548  0723  0BF0               	decfsz	??_Lcd_Chr_CP,f
  1549  0724  2F23               	goto	u417
  1550                           
  1551                           ;flex_lcd.h: 145: PORTAbits.RA1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); P
      +                          ORTAbits.RA1 = 0;
  1552  0725  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0726  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0727  1485               	bsf	5,1	;volatile
  1555  0728  3003               	movlw	3
  1556  0729  00F0               	movwf	??_Lcd_Chr_CP
  1557  072A                     u427:	
  1558  072A  0BF0               	decfsz	??_Lcd_Chr_CP,f
  1559  072B  2F2A               	goto	u427
  1560  072C  1283               	bcf	3,5	;RP0=0, select bank0
  1561  072D  1303               	bcf	3,6	;RP1=0, select bank0
  1562  072E  1085               	bcf	5,1	;volatile
  1563                           
  1564                           ;flex_lcd.h: 146: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned lon
      +                          g)((5500)*(8000000/4000000.0)));
  1565  072F  3003               	movlw	3
  1566  0730  00F0               	movwf	??_Lcd_Chr_CP
  1567  0731                     u437:	
  1568  0731  0BF0               	decfsz	??_Lcd_Chr_CP,f
  1569  0732  2F31               	goto	u437
  1570  0733  300F               	movlw	15
  1571  0734  00F1               	movwf	??_Lcd_Chr_CP+1
  1572  0735  3047               	movlw	71
  1573  0736  00F0               	movwf	??_Lcd_Chr_CP
  1574  0737                     u447:	
  1575  0737  0BF0               	decfsz	??_Lcd_Chr_CP,f
  1576  0738  2F37               	goto	u447
  1577  0739  0BF1               	decfsz	??_Lcd_Chr_CP+1,f
  1578  073A  2F37               	goto	u447
  1579  073B  2F3C               	nop2
  1580  073C  0008               	return
  1581  073D                     __end_of_Lcd_Chr_CP:	
  1582  007E                     btemp	set	126	;btemp
  1583  007E                     wtemp0	set	126


Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Out@buffer	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[7]), STR_3(CODE[9]), STR_2(CODE[6]), STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_init
    _init->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0    1309
                                              9 COMMON     4     4      0
                            _Lcd_Out
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 3     3      0     330
                                              6 COMMON     3     3      0
                            _Lcd_Cmd
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             3     3      0     210
                                              3 COMMON     3     3      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     3      2     933
                                              3 COMMON     5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     120
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _init
     _Lcd_Cmd
     _Lcd_Init
       _Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Nov 14 18:06:46 2018

                       pc 0002                        l43 0789                        l44 07B4  
                      l91 05DA                        l92 05D9                        l89 05AA  
                      u15 05E5                        u25 05F7                        u35 0608  
                      u45 061B                        u55 063B                        u65 064D  
                      u95 0693                        fsr 0004                       l800 053C  
                     l802 053F                       l814 0559                       l806 0545  
                     l808 0553                       l836 05D4                       l828 0585  
                     l796 0536                       l798 0539                       u105 06A5  
                     u115 06B6                       u125 06C9                       u135 06E9  
                     u145 06FB                       u307 0799                       u227 05CF  
                     u317 07A7                       u237 052C                       u407 06E1  
                     u327 07C4                       u247 0751                       u417 0723  
                     u337 07D2                       u257 075A                       u427 072A  
                     u347 062C                       u267 0763                       u437 0731  
                     u357 0633                       u277 076C                       u447 0737  
                     u367 0675                       u287 0775                       u377 067C  
                     u297 077E                       u387 0685                       u397 06DA  
                     fsr0 0004              __CFG_LVP$OFF 0000                      STR_1 0009  
                    STR_2 0022                      STR_3 0012                      STR_4 001B  
                    _main 0574                      _init 04FA                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000           __end_of_Lcd_Cmd 068B  
         __end_of_Lcd_Out 0574                _Lcd_Chr_CP 068B                     ?_main 0070  
                   ?_init 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _RCSTA 0018                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TXREG 0019  
                   _TXSTA 0098             __CFG_PWRTE$ON 0000            __CFG_FCMEN$OFF 0000  
                   main@x 007B                     main@y 007C                     pclath 000A  
                   status 0003                     wtemp0 007E          __end_of_Lcd_Init 07FC  
          __CFG_MCLRE$OFF 0000           __initialization 07FC              __end_of_main 05DD  
            __end_of_init 0534                    ??_main 0079                    ??_init 0076  
                  _ANSELH 0189                    _OSCCON 008F                 ??_Lcd_Cmd 0070  
               ??_Lcd_Out 0075               ?_Lcd_Chr_CP 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070                 ?_Lcd_Init 0070       __size_of_Lcd_Chr_CP 00B2  
              __pmaintext 0574                   _BAUDCTL 0187                ??_Lcd_Init 0073  
              __stringtab 0003                   _Lcd_Cmd 05DD                   _Lcd_Out 0534  
                 __ptext1 04FA                   __ptext2 073D                   __ptext3 0534  
                 __ptext4 05DD                   __ptext5 068B      end_of_initialization 07FC  
            ??_Lcd_Chr_CP 0070                 _PORTAbits 0005                 _PORTBbits 0006  
               _TRISAbits 0085        __end_of_Lcd_Chr_CP 073D       start_initialization 07FC  
           Lcd_Out@buffer 0074         __size_of_Lcd_Init 00BF  __CFG_FOSC$INTRC_NOCLKOUT 0000  
               ___latbits 0002                  ?_Lcd_Cmd 0070                  ?_Lcd_Out 0073  
               __pstrings 0003                  Lcd_Out@x 0073                  Lcd_Out@y 0076  
            Lcd_Init@data 0075               __stringbase 0008                  _Lcd_Init 073D  
        __size_of_Lcd_Cmd 00AE          __size_of_Lcd_Out 0040        __end_of__stringtab 0009  
          Lcd_Chr_CP@data 0072               Lcd_Cmd@data 0072             __size_of_main 0069  
           __size_of_init 003A               Lcd_Out@data 0077                 stringcode 0003  
                stringdir 0003                  stringtab 0003  
